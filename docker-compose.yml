version: '3.7'

services:
  es01:
      image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
      volumes:
        - esdata01:/usr/share/elasticsearch/data
      ports:
        - ${ES_PORT}:9200
      environment:
        - node.name=es01
        - cluster.name=${CLUSTER_NAME}
        - cluster.initial_master_nodes=es01
        - bootstrap.memory_lock=true
        - xpack.security.enabled=false
        - xpack.security.transport.ssl.enabled=false
        - xpack.license.self_generated.type=${LICENSE}
      mem_limit: ${MEM_LIMIT}
      ulimits:
        memlock:
          soft: -1
          hard: -1
      healthcheck:
        test:
          [
            "CMD-SHELL",
            "curl -f http://localhost:9200/_cluster/health || exit 1",
          ]
        interval: 10s
        timeout: 10s
        retries: 120

  kibana:
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - xpack.security.enabled= false
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
    mem_limit: ${MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  apm-server:
    #Use apm server 7.x, 8.x requires fleet
    image: docker.elastic.co/apm/apm-server:7.13.0
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["es01:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  filebeat:
    image: docker.elastic.co/beats/filebeat:${STACK_VERSION}
    entrypoint: "filebeat -e -strict.perms=false"
    volumes:
      - logs:/logs
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    depends_on:
      - orders-service

  mariadb:
    image: mariadb:11.2.2
    environment:
      - MARIADB_DATABASE= "orders"
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "3306:3306"
    volumes:
      - mdbdata:/var/lib/mysql
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql

  orders-service:
    build: ./orders-service
    environment:
      - SPRING_PROFILES_ACTIVE=elastic   
      - LOG_PATH=/var/logs
      - ELASTIC_APM_SERVICE_NAME=orders-service
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
    volumes:
      - logs:/var/logs
    ports:
      - "8080:8080"

  shipping-service:
    build: ./shipping-service
    environment:
      - ELASTIC_APM_SERVICE_NAME=shipping-service
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
    volumes:
      - logs:/var/logs
    ports:
      - "8090:8090"
volumes:
  esdata01:
  kibanadata:
  mdbdata:
  logs:
